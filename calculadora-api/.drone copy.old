# .drone.yml (VERSÃO FINAL CORRIGIDA PARA SSH)

kind: pipeline
type: ssh
name: CI-CD-Calculadora-SSH

# O servidor de build onde os comandos serão executados.
server:
  host: build-server-node # O nome de serviço do nosso container de build.
  user: root
  ssh_key:
    from_secret: BUILD_SERVER_SSH_KEY # A chave PRIVADA id_rsa.

# --- OTIMIZAÇÃO: Workspace ---
# Para o runner SSH, isso define o diretório base onde o Drone irá
# clonar o seu repositório dentro do container 'build-server-node'.
workspace:
  path: /root/builds

# --- Gatilhos (Triggers) ---
trigger:
  branch: [main]
  event: [push, tag]

steps:
  # Opcional, mas recomendado: Preparar o ambiente de build
  # Este step só precisa ser executado uma vez, ou quando você muda as ferramentas.
  # Você pode comentá-lo após a primeira execução bem-sucedida.
  - name: Preparar Ambiente
    commands:
      # Instala as ferramentas necessárias no container de build.
      # O '--no-cache' garante que estamos sempre pegando as versões mais recentes.
      - apk add --update --no-cache nodejs npm git openjdk17-jre
      # Instala o sonar-scanner globalmente.
      - npm install -g sonar-scanner
      - echo "Ambiente de build preparado com sucesso."
    # Só executa este step se um arquivo específico não existir.
    # Isso evita reinstalar tudo a cada build.
    when:
      path:
        exclude: /usr/bin/sonar-scanner

  # --- O Drone já clonou o repositório em /root/builds/<seu-repo> ---
  # Todos os comandos a seguir serão executados dentro desse diretório.

  # 1. Instalar Dependências
  - name: Instalar Dependências
    commands:
      - npm ci # 'ci' é mais rápido e seguro para automação.

  # 2. Lint e Testes
  - name: Lint e Testes
    commands:
      - npm run lint
      - npm test -- --coverage # Gera relatórios de cobertura para o Sonar.

  # 3. Análise SonarQube
  - name: Análise SonarQube
    environment:
      SONAR_HOST_URL:
        from_secret: SONAR_HOST_URL # Ex: http://sonar.local
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN # Token gerado na UI do SonarQube
    commands:
      # Executa o scanner no código-fonte.
      # As variáveis de ambiente são passadas para o comando.
      - sonar-scanner

  # 4. Build do Projeto (se necessário)
  - name: Build do Projeto
    commands:
      - npm run build # Supondo que você tenha um script de build no seu package.json
      - echo "Build do projeto concluído."
      - echo "Artefatos de build estão em /root/builds/${DRONE_REPO_NAME}/dist" # ou o diretório de saída