# Use o tipo 'ssh' para o runner SSH
kind: pipeline
type: ssh
name: CI - Verifica√ß√£o de Qualidade

# A se√ß√£o 'node' n√£o √© mais necess√°ria, pois o runner SSH n√£o usa labels
# para selecionar o servidor, ele usa a diretiva 'server'..
node:
   environment: ssh-build
   arch: arm64

# O servidor de build √© definido globalmente para todas as pipelines neste arquivo
server:
  host: build-server-node
  user: root
  ssh_key:
    from_secret: BUILD_SERVER_SSH_KEY

# O workspace tamb√©m pode ser definido globalmente
workspace:
  path: /home/ubuntu/builds

# Gatilho: Roda para todos os pushes e pull requests em qualquer branch
trigger:
  event:
    - push
    - pull_request

steps:
- name: Setup do Projeto
  commands:
    # Instala depend√™ncias de forma limpa e cria as pastas necess√°rias
    - npm ci
    - mkdir -p reports coverage

- name: Verifica√ß√£o de Lint
  commands:
    # Gera o relat√≥rio de lint para o SonarQube analisar
    - npm run lint:report

- name: Testes Unit√°rios com Cobertura
  commands:
    # Executa os testes e gera o relat√≥rio de cobertura
    - npm test -- --coverage

- name: An√°lise e Valida√ß√£o do SonarQube
  # Este passo combina a an√°lise e a valida√ß√£o do Quality Gate
  environment:
    SONAR_TOKEN:
      from_secret: SONAR_TOKEN
    SONAR_HOST_URL:
      from_secret: SONAR_HOST_URL
  commands:
    - set -e
    - npx sonar-scanner -Dsonar.token=$SONAR_TOKEN -Dsonar.host.url=$SONAR_HOST_URL

- name: Validar Quality Gate
  environment:
    SONAR_TOKEN:
      from_secret: SONAR_TOKEN
    SONAR_HOST_URL:
      from_secret: SONAR_HOST_URL
  commands:
    - set -e
    - |
      echo "Aguardando processamento da an√°lise no SonarQube..."
      sleep 10

      # Obt√©m o √∫ltimo task.id da an√°lise finalizada
      taskId=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/project_analyses/search?project=calculadora-api" | jq -r '.current.component.analysisId')
      echo "√öltimo taskId: $taskId"

      status=""
      tentativas=0
      while [ "$status" != "SUCCESS" ] && [ $tentativas -lt 10 ]; do
        sleep 5
        status=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/ce/task?id=$taskId" | jq -r '.task.status')
        echo "Status: $status"
        tentativas=$((tentativas+1))
      done

      qualityStatus=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=calculadora-api" | jq -r '.projectStatus.status')
      echo "Resultado do Quality Gate: $qualityStatus"

      if [ "$qualityStatus" != "OK" ]; then
        echo "‚ùå Quality Gate falhou. Bloqueando deploy."
        exit 1
      else
        echo "‚úÖ Quality Gate aprovado. Continuando pipeline."
      fi

---
# Define uma nova pipeline para o deploy em Homologa√ß√£o
kind: pipeline
type: ssh
name: Deploy - Homologa√ß√£o

server:
  host: build-server-node  # üî¥ ESSENCIAL!
  user: root
  ssh_key:
    from_secret: BUILD_SERVER_SSH_KEY

# Esta pipeline depende do sucesso da pipeline 'CI - Verifica√ß√£o de Qualidade'
depends_on:
  - CI - Verifica√ß√£o de Qualidade

# Gatilho: Roda SOMENTE em eventos de pull_request para a branch 'main'
trigger:
  event:
    - pull_request
    - push
  branch:
    - main

steps:
- name: Deploy em Homologa√ß√£o
  commands:
    # O '|| true' evita que o passo falhe se o servi√ßo n√£o existir na primeira vez
    - pm2 stop calculadora-api-homolog || true
    - pm2 delete calculadora-api-homolog || true
    - pm2 start src/index.js --name calculadora-api-homolog

---
# Define uma nova pipeline para o deploy em Produ√ß√£o
kind: pipeline
type: ssh
name: Deploy - Produ√ß√£o

server:
  host: build-server-node  # üî¥ ESSENCIAL!
  user: root
  ssh_key:
    from_secret: BUILD_SERVER_SSH_KEY

# Esta pipeline tamb√©m depende do sucesso da pipeline 'CI - Verifica√ß√£o de Qualidade'
depends_on:
  - CI - Verifica√ß√£o de Qualidade

# Gatilho: Roda SOMENTE quando uma tag √© criada
trigger:
  event:
    - tag

steps:
- name: Deploy em Produ√ß√£o
  commands:
    - pm2 stop calculadora-api-prod || true
    - pm2 delete calculadora-api-prod || true
    - pm2 start src/index.js --name calculadora-api-prod