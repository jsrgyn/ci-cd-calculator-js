kind: pipeline
type: ssh
name: CI-CD-Calculadora-SSH

node:
  environment: ssh-build
  arch: arm64

# clone automático ativado por padrão (NÃO incluir "clone: disable")

server:
  host: build-server-node
  user: root
  ssh_key:
    from_secret: BUILD_SERVER_SSH_KEY

workspace:
  path: /root/builds

trigger:
  branch: [main]
  event: [push, tag]

steps:
  - name: Preparar Ambiente
    commands:
      - echo "[SETUP] Instalando ferramentas..."
      - apk add --no-cache git nodejs npm openssh bash
      - echo "[SETUP] Instalando sonar-scanner via npm..."
      - npm install -g sonar-scanner

  - name: Instalar Dependências
    commands:
      - echo "[NPM] Instalando dependências com npm ci"
      - npm ci

  - name: Lint e Testes
    commands:
      - echo "[LINT] Executando lint"
      - npm run lint
      - echo "[TEST] Executando testes com cobertura"
      - npm test -- --coverage

  - name: Análise SonarQube
    environment:
      SONAR_HOST_URL:
        from_secret: SONAR_HOST_URL
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    commands:
      - echo "[SONAR] Rodando análise no SonarQube"
      - sonar-scanner \
          -Dsonar.projectKey=${DRONE_REPO_NAME} \
          -Dsonar.sources=. \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

  - name: Build do Projeto
    commands:
      - echo "[BUILD] Executando build final"
      - npm run build
      - echo "[BUILD] Artefatos disponíveis em /root/builds/${DRONE_REPO_NAME}/dist"
